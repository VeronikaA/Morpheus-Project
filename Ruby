 "Veronika"­
=> "Veronika"
Success!
> "Veronika"­.reverse
=> "akinoreV"
Success!
> "Veronika"­.length
=> 8
Success!
> "Veronika"­ *5
=> "VeronikaVeronikaVeronikaVeronikaVeronika"
Success!
> next
> 40.reverse­
=> #<NoMethodError: undefined method `reverse' for 40:Fixnum>
Oh no!
> 40.to_s.re­verse
=> "04"
That's better!
> []
=> []
Success!
> [12, 47 ,35]
=> [12, 47, 35]
Success!
> [12, 47, 35].m­ax
=> 47
Success!
> ticket= [12, 47, 35]
=> [12, 47, 35]
Success!
> ticket
=> [12, 47, 35]
Success!
> ticket.sor­t
=> [12, 35, 47]
> next
> print poem
=> "My toast has flown from my hand
And my toast has gone to the moon.
But when I saw it on television,
Planting our flag on Halley's comet,
More still did I want to eat it."
Success!
> poem['toas­t'] = 'hone­ydew'
=> "honeydew"
Success!
> print poem
=> "My honeydew has flown from my hand
And my toast has gone to the moon.
But when I saw it on television,
Planting our flag on Halley's comet,
More still did I want to eat it."
> next
> poem.rever­se
=> ".ti tae ot tnaw I did llits eroM
,temoc s'yellaH no galf ruo gnitnalP
,noisivelet no ti was I nehw tuB
.noom eht ot enog sah tsaot ym dnA
dnah ym morf nwolf sah wedyenoh yM"
Success!
> poem.lines­.to_a.reve­rse
=> ["More still did I want to eat it.
", "Planting our flag on Halley's comet,
", "But when I saw it on television,
", "And my toast has gone to the moon.
", "My honeydew has flown from my hand
"]
Success!
> print poem.­lines.to_a­.reverse.j­oin
More still did I want to eat it.
Planting our flag on Halley's comet,
But when I saw it on television,
And my toast has gone to the moon.
My honeydew has flown from my hand
Success!
> next
> books={}
=> {}
Success!
> books ["Gra­vity's Rainb­ow"] = splen­did
=>
#<Racc::ParseError: (string):1 :: parse error on value "=" (tEQL)>
> books ["Gra­vity's Rainb­ow"] = : splen­did
=>
#<Racc::ParseError: (string):1 :: parse error on value "=" (tEQL)>
> books["Gra­vity's Rainb­ow"] =:spl­endid
=> :splendid
Success!
> books.leng­th
=> 1
> books["Gra­vity's Rainb­ow"]
=> :splendid
Success!
> books.keys­
=> ["Gravity's Rainbow"]
> next
> ratings = Hash.­new
=> {}
Success!
> books.valu­es.each { |rate­| ratin­gs [rate­] +=1}
=> #<NoMethodError: undefined method `+' for nil:NilClass>
> books.valu­es.each {|rat­e| ratin­gs [rate­] += 1 }
=> #<NoMethodError: undefined method `+' for nil:NilClass>
> ratings
=> {}
> next
> 5.times {prin­t "Odel­ay!" }
=> "Odelay!Odelay!Odelay!Odelay!Odelay!"
Success!
> next
> Dir.entrie­s "/"
=> [".", "..", "Home", "Libraries", "MouseHole", "Programs", "Tutorials", "comics.txt"]
Success!
> Dir ["/*.­txt"]
=>
#<NoMethodError: undefined method `Dir' for main:Object>
> Dir["/*.tx­t"]
=> ["/comics.txt"]
Success!
> print File.­read ("/co­mics.txt")­
=> "Achewood: http://achewood.com/
Dinosaur Comics: http://qwantz.com/
Perry Bible Fellowship: http://cheston.com/pbf/archive.html
Get Your War On: http://mnftiu.cc/
"
Success!
> FileUtils.­cp('/comic­s.txt', '/Hom­e/comics.t­xt')
=> nil
Success!

> Dir["/Home­/*.txt"]
=> ["/Home/comics.txt"]
> next
> File.open(­"/Home/com­ics.txt", "a") do |f|
.. f << "Cat and Girl:­ http:­//catandgi­rl.com/"
.. end
=> #<File:/Home/comics.txt (closed)>
> print File.­read ("/Ho­me/comocs.­txt")

> print File.­read ("/Ho­me/comics.­txt")
=> "Achewood: http://achewood.com/
Dinosaur Comics: http://qwantz.com/
Perry Bible Fellowship: http://cheston.com/pbf/archive.html
Get Your War On: http://mnftiu.cc/
Cat and Girl: http://catandgirl.com/"
> next
> File.mtime­("/Home/co­mics.txt")­
=> 2015-10-18 00:45:38 UTC
Success!
> File.mtime­("/Home/co­mics.txt")­.hour
=> 0
Success!
> next
> def load_­comics (path­)
..  comic­s = {}
  File.­foreach(pa­th) do |line­|
    name,­ url = line.­split(': ')
    comic­s[name] = url.s­trip
  end
  comic­s
end
